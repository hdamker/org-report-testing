name: Generate CAMARA Project Reports

on:
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Type of report to generate'
        required: true
        type: choice
        options:
          - 'repository-overview'
          - 'api-releases'
        default: 'repository-overview'
      
      include_archived:
        description: 'Include archived repositories'
        required: false
        type: boolean
        default: false
      
      detailed_activity:
        description: 'Include detailed activity analysis'
        required: false
        type: boolean
        default: false
      
      template_compliance:
        description: 'Include template compliance checks'
        required: false
        type: boolean
        default: false

jobs:
  test-basic-functionality:
    runs-on: ubuntu-latest
    steps:
      - name: Test Basic Setup
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CAMARA_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            console.log('üß™ Testing basic workflow functionality...');
            console.log(`Report type: ${{ github.event.inputs.report_type }}`);
            console.log(`Include archived: ${{ github.event.inputs.include_archived }}`);
            console.log(`Detailed activity: ${{ github.event.inputs.detailed_activity }}`);
            console.log(`Template compliance: ${{ github.event.inputs.template_compliance }}`);
            console.log('‚úÖ Basic setup working');

      - name: Test API Access
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CAMARA_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            console.log('üîç Testing API access...');
            try {
              const response = await github.rest.repos.listForOrg({
                org: 'camaraproject',
                per_page: 5
              });
              console.log(`‚úÖ API access working: Found ${response.data.length} repositories`);
              console.log(`First repo: ${response.data[0]?.name || 'none'}`);
            } catch (error) {
              console.log(`‚ùå API access failed: ${error.message}`);
              throw error;
            }

      - name: Test Repository Processing
        if: github.event.inputs.report_type == 'repository-overview'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CAMARA_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            console.log('üì¶ Testing repository processing...');
            const org = 'camaraproject';
            
            // Get first page of repositories
            const response = await github.rest.repos.listForOrg({
              org: org,
              type: 'all',
              per_page: 3
            });
            
            console.log(`Found ${response.data.length} repositories to test`);
            
            for (const repo of response.data) {
              console.log(`Processing ${repo.name}...`);
              
              try {
                // Test getting topics
                const topics = await github.rest.repos.getAllTopics({
                  owner: org,
                  repo: repo.name
                });
                console.log(`  Topics: ${topics.data.names.join(', ') || 'none'}`);
                
                // Test basic info
                console.log(`  Type: ${repo.private ? 'Private' : 'Public'}`);
                console.log(`  Stars: ${repo.stargazers_count}`);
                console.log(`  Issues: ${repo.open_issues_count}`);
                
              } catch (error) {
                console.log(`  ‚ö†Ô∏è Error processing ${repo.name}: ${error.message}`);
              }
            }
            
            console.log('‚úÖ Repository processing test completed');

      - name: Test Template Compliance Check
        if: github.event.inputs.template_compliance == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.CAMARA_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            console.log('üîç Testing template compliance...');
            const org = 'camaraproject';
            
            // Get repositories with API topics
            const response = await github.rest.repos.listForOrg({
              org: org,
              type: 'all',
              per_page: 5
            });
            
            for (const repo of response.data) {
              try {
                const topics = await github.rest.repos.getAllTopics({
                  owner: org,
                  repo: repo.name
                });
                
                const isAPIRepo = topics.data.names.some(topic => 
                  topic === 'sandbox-api-repository' || topic === 'incubating-api-repository'
                );
                
                if (isAPIRepo) {
                  console.log(`üìã Checking ${repo.name}...`);
                  const repoType = topics.data.names.includes('sandbox-api-repository') ? 'Sandbox' : 'Incubating';
                  
                  // Simple compliance checks
                  const description = repo.description || '';
                  console.log(`  Description: "${description}"`);
                  console.log(`  Starts with ${repoType}: ${description.startsWith(repoType)}`);
                  console.log(`  Contains family: ${description.toLowerCase().includes('family')}`);
                  console.log(`  Website: ${repo.homepage || 'none'}`);
                  
                  break; // Just test one API repo
                }
              } catch (error) {
                console.log(`Error checking ${repo.name}: ${error.message}`);
              }
            }
            
            console.log('‚úÖ Template compliance test completed');

      - name: Generate Simple Report
        if: github.event.inputs.report_type == 'repository-overview'
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üìù Generating simple report...');
            
            const report = `# CAMARA Test Report
            
**Generated**: ${new Date().toISOString()}
**Report Type**: ${{ github.event.inputs.report_type }}
**Template Compliance**: ${{ github.event.inputs.template_compliance }}

## Test Results

‚úÖ Workflow started successfully
‚úÖ API access working  
‚úÖ Repository processing working
‚úÖ Basic report generation working

This is a simplified test version to verify workflow functionality.
`;
            
            const fs = require('fs');
            const filename = 'camara-test-report.md';
            fs.writeFileSync(filename, report);
            
            console.log(`‚úÖ Test report saved as ${filename}`);

      - name: Upload Test Report
        if: github.event.inputs.report_type == 'repository-overview'
        uses: actions/upload-artifact@v4
        with:
          name: camara-test-report
          path: '*.md'
          retention-days: 7